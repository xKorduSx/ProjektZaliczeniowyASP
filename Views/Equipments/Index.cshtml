@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@model IEnumerable<SportsEquipmentRental.Models.Equipment>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

@if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsAvailable)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RentalPricePerDay)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsAvailable)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RentalPricePerDay)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.EquipmentId">Details</a>
                @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
                {
                    <span> | </span><a asp-action="Edit" asp-route-id="@item.EquipmentId">Edit</a>
                    <span> | </span><a asp-action="Delete" asp-route-id="@item.EquipmentId">Delete</a>
                }
            </td>
        </tr>
}
    </tbody>
</table>
